# KEEP THIS FILE SORTED
# in case of trouble, use ./contrib/conf_lint.py < FILENAME

# Common problems:
# - no FUNC() - feature (typically, a syscall) not implemented
# - utimensat - tries to call utimensat() as part of setup, fails
# - tmpfs - tries to mount tmpfs
# - copy child - tries to copy a child binary (X_child) to "."
# - kernel config - tries to read kernel .config

[DEFAULT]
timeout = 30

[sched_getparam02]
skip = yes

[sysfs06]
skip = yes


[chroot03_run]
must-pass =
    1
    2
    3
    4


# test 10: EOPNOTSUPP expected on CLOCK_THREAD_CPUTIME_ID
[clock_nanosleep01]
timeout = 40
must-pass =
    1
    2
    3
    4
    5
    8
    9
    11
    12
    13
    14

[clone03]
timeout = 40



[clone06]
timeout = 40


# segfault: uses sigprocmask and sends signals, broken in Gramine
[epoll_pwait01]
must-pass =
    1


[execve03]
must-pass =
    1
    2
    3
    4
    5


[faccessat01]
timeout = 80


[fchdir02]
timeout = 40


[fchmodat01]
timeout = 40



[fchownat01_run]
must-pass =
    1
    2
    3
    5



[fcntl02_64]
timeout = 40



# no statfs()
[fcntl14]
timeout = 210

[fcntl14_64]
timeout = 210



# no locks
[fcntl18]
must-pass =
    1
    2
    4

[fcntl18_64]
must-pass =
    1
    2
    4


# 2. fdatasync() on /dev/null passes instead of failing with EINVAL
[fdatasync02]
must-pass =
    1


[fork06]
timeout = 90


# TBROK: Test 0 haven't reported results
[fstat03]
must-pass = 
    1

[fstat03_64]
must-pass = 
    1
    


# can write up to 65,536 8K blocks; the test itself assumes that it takes no more than 120 seconds
[fsync02]
timeout = 120

# 1. fsync() on a pipe returns EROFS, not EINVAL
# 2. fsync() on a socket returns EROFS, not EINVAL
# 5. fsync() on a fifo returns EROFS, not EINVAL
[fsync03]
timeout = 40


# opens /proc/sys/kernel/pid_max
[get_robust_list01]
must-pass = 
    1
    2
    3
    4



# utimensat
[getcwd04]
must-pass =
    2


# tries to open /etc/hosts
[getdtablesize01]
must-pass =
    1


# only ITIMER_REAL is supported
[getitimer01]
must-pass =
    1
    3
    5



# 3, 4. getpgid(getppid()) -> getpgid(1) fails with ESRCH
# 5, 6. getpgid(getpgid(0)) -> getpgid(1) fails with ESRCH
# 7. getpgid(1) fails with ESRCH
[getpgid01]
must-pass =
    1
    2


[listen01]
must-pass =
    1
    2


# tries to set RLIMIT_FSIZE and write past file size limit
[llseek01]
must-pass =
    1


# first two tests use supported regular files and FIFOs, other tests use unsupported char/block
# devices
[mknod01]
must-pass =
    1
    2

[mlock202]
must-pass =
    1
    
# should fail when growing the stack over a guard page
[mmap18]
must-pass =
    3
    4


[mprotect01]
must-pass =
    2


# 2 sub-tests fail with MS_INVALIDATE and MS_SYNC unsupported flag
[msync03]
must-pass =
    2
    3
    4
    5

# uses MS_SYNC flag which is not supported in Gramine

# Subtest 5 requires proper file permissions checks (file with 0600 is opened using another user and
# failure is expected).
[open08]
must-pass =
    1
    2
    3
    4
    6


[pipe11]
must-pass =
    1


[pread01]
timeout = 40

[pread01_64]
timeout = 40

[pread02]
timeout = 40



[pwrite01_64]
timeout = 40

[pwrite04]
must-pass =
    2

[pwrite04_64]
timeout = 40
must-pass =
    2


# one sub-test fails MS_SYNC unsupported msync flag
[qmm01]
must-pass =
    1
    2
    4


[readdir01]
timeout = 40


[readlinkat01_run]
must-pass =
    3
    4


# Subtests 4 and 5 require handling MSG_OOB and MSG_ERRQUEUE flags in recv.
[recv01]
must-pass =
    1
    2
    3

# subtest 3: recvfrom(addr=-1) should return 0 (this is weird, couldn't trace this path in Linux).
# subtest 6: Requires MSG_OOB support.
# subtest 7: Requires MSG_ERRQUEUE support.
[recvfrom01]
must-pass =
    1
    2
    4
    5

# subtest 3: recvmsg01(addr=-1) should return 0 (this is weird, couldn't trace this path in Linux).
# subtest 4: Requires MSG_ERRQUEUE support.
# subtest 8: Crashes Gramine in a child process, because socket migration is totally broken. A unix
#            socket is bound in the parent and then used in the child, but because migration is
#            broken, the child uses a dangling pointer (hdl->info.sock.addr.un.dentry; actually
#            pointing to the parent's address space) and crashes in __do_accept which tries to do
#            get_dentry(sock->addr.un.dentry).

# Test 14 expects a restart of rt_sigtimedwait01 with updated timeout on ignored (but unblocked)
# SIGUSR2, so that it finally ETIMEDOUTs. However, restarting on unblocked (and thus pending) but
# ignored (and thus having SIG_IGN) signals is not yet implemented in Gramine.
[rt_sigtimedwait01]
must-pass =
    1
    2
    3
    4
    5
    6
    7
    8
    9
    10
    11
    12
    13
    15
    16
    17
    18
    19


[sched_getaffinity01]
must-pass =
    1
    2
    3


[sched_setaffinity01]
must-pass = 
    1
    2
    3


[select03]
skip = yes

[select04]
timeout = 60


[send01]
must-pass =
    1
    2
    3


# sendfile09 copies 1GB of data from one file to another twice, may be slow on HDD machines
[sendfile09]
timeout = 60

[sendfile09_64]
timeout = 60


[sendto01]
must-pass =
    1
    2
    3
    4
    7


[setgroups03]
must-pass =
    1

[setpgid02]
must-pass = 
    1


[setrlimit01]
must-pass =
    1
    3
    4

[setrlimit02]
must-pass =
    1

[setrlimit03]
must-pass =
    2


[setsockopt03]
must-pass =
    2


[setuid01]
timeout = 40


[sigaltstack02]
timeout = 40


[socket01]
timeout = 40
must-pass =
    3
    5
    8

[socket02]
timeout = 40


[socketpair01]
must-pass =
    1
    5
    6

[socketpair02]
must-pass =
    1

[sockioctl01]
timeout = 40
must-pass =
    1


# no symlink()
[statfs02_run]
must-pass =
    1
    2
    3
    4
    5

# no symlink()
[statfs02_run_64]
must-pass =
    1
    2
    3
    4
    5


# no symlink()
[statvfs02_run]
must-pass =
    1
    3
    4
    5


[sync01]
timeout = 40


[syscall01]
timeout = 80

# Gramine doesn't emulate all sysconf parameters, so we disable the ones not currently emulated
[sysconf01]
must-pass =
    1
    2
    3
    4
    5
    6
    7
    8
    9
    10
    12
    14
    15
    16
    17
    18
    19
    20
    21
    24
    25
    27
    28
    29
    30
    31
    32
    33
    34
    35
    36
    37
    38
    39
    41
    42
    44
    45
    46
    47
    48
    50
    51
    52
    53
    56


# Other subtests require personality() syscall support.
[uname04]
must-pass =
    1



[unlink05_run]
must-pass = 
    1


# tries to open '/proc/2/stat'
[wait401]
timeout = 40
must-pass =
    2
    3


[write03]
timeout = 40

